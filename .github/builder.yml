name: Build and Publish Stable Add-on

on:
  push:
    branches:
      - main
    tags: [ 'v*.*.*' ]
  workflow_dispatch:


jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_files: ${{ steps.changed_files.outputs.all }}
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: Get add-ons
        id: addons
        run: |
          declare -a addons
          for addon in $(find ./ -name config.json | cut -d "/" -f2 | sort -u); do
            addons+=("$addon");
          done
          echo "::set-output name=addons::${addons[@]}"

      - name: Get changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon ]]; then
              for file in ${{ env.MONITORED_FILES }}; do
                  if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon/$file ]]; then
                      changed_addons+=("\"${addon}\",");
                  fi
              done
            fi
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)
          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "::set-output name=changed::true";
            echo "::set-output name=addons::[$changed]";
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
          fi

  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix: 
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
name: Build and Publish Stable Add-on

on:
  push:
    branches:
      - main
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: ["squeezelite"]
        arch: ["aarch64", "amd64", "armv7", "i386"]

    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.1

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: ./${{ matrix.addon }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACTION_TOKEN }}

      - name: Build ${{ matrix.arch }} add-on
#        if: github.event_name == 'push' && contains(github.ref, '/tags/v')
        uses: home-assistant/builder@2024.03.5
        with:
          args: |
            --${{ matrix.arch }} \
            --target ${{matrix.addon}} \
            --image "${{ matrix.arch }}-addon-${{matrix.addon}}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}"
